#!/bin/sh

# Generate or update the GRUB configuration file with superuser privileges, and
# provide setup instructions, if this theme is newly installed. Additionally,
# warn the user if GRUB continues to refer to this theme after it has been
# uninstalled.
#
# Usage:
#     post_install:
#         Generate the GRUB configuration file with superuser privileges if this
#         theme is in use. If this theme is newly installed, provide setup
#         instructions to the user.
#
#         Usage: post_install
#
#     post_upgrade:
#         Generate the GRUB configuration file with superuser privileges if this
#         theme is in use.
#
#         Usage: post_upgrade
#
#     post_remove:
#         Warn the user if GRUB still uses this theme after uninstalling it.
#
#         Usage: post_remove
#
# Dependencies:
#     This script depends on the following commands: `grep`, `grub-mkconfig`,
#     `printf`, `sudo`.
#
# Note:
#     This script assumes that the theme is located at
#     `/usr/share/grub/themes/grub-theme-vimix-very-dark-blue`.

readonly GRUB_THEME_CFG_PATH="/boot/grub/grub.cfg"
readonly GRUB_THEME_DEFAULT_PATH="/etc/default/grub"
readonly GRUB_THEME_INSTALL_PATH="/usr/share/grub/themes/grub-theme-vimix-very-dark-blue"
readonly GRUB_THEME_SEARCH_PATTERN='^GRUB_THEME="/usr/share/grub/themes/grub-theme-vimix-very-dark-blue/theme.txt"'

# Generate the GRUB configuration file with superuser privileges if this theme
# is in use. If this theme is newly installed, provide setup instructions to the
# user.
#
# Usage: post_install
post_install() {
    _grub_mkconfig_smart

    if ! _is_use_theme; then
        _status "The following instructions setup GRUB to use this theme."
        _status "Edit the following line in $GRUB_THEME_DEFAULT_PATH:"
        _status 'GRUB_THEME="'$(
        )'/usr/share/grub/themes/grub-theme-vimix-very-dark-blue/theme.txt"'
        _status "Update GRUB by running the following command:"
        _status "grub-mkconfig -o $GRUB_THEME_CFG_PATH"
    fi
}

# Generate the GRUB configuration file with superuser privileges if this theme
# is in use.
#
# Usage: post_upgrade
post_upgrade() {
    _grub_mkconfig_smart
}

# Warn the user if GRUB continues to refer to this theme after it has been
# uninstalled.
#
# Usage: post_remove
post_remove() {
    if _is_use_theme_grub_cfg; then
        _status_error "$GRUB_THEME_CFG_PATH still mentions this theme."
        _grep_theme_in_grub_cfg
        _status_error "Make sure to fix this ASAP! Best BEFORE rebooting!"
    fi

    if _is_use_theme_default_grub; then
        _status_error "$GRUB_THEME_DEFAULT_PATH still mentions this theme."
        _grep_theme_in_default_grub
        _status_error \
            "Make sure to either replace this theme or to disable GRUB" \
            "themes by commenting the line containing 'GRUB_THEME=' in" \
            "$GRUB_THEME_DEFAULT_PATH"
    fi
}

# Print lines from the default GRUB configuration file that match this theme.
#
# Usage: _grep_theme_in_default_grub
_grep_theme_in_default_grub() {
    grep -P -n "$GRUB_THEME_SEARCH_PATTERN" "$GRUB_THEME_DEFAULT_PATH"
}

# Print lines from the current GRUB configuration file that match this theme.
#
# Usage: _grep_theme_in_grub_cfg
_grep_theme_in_grub_cfg() {
    grep -F -n "$GRUB_THEME_INSTALL_PATH" "$GRUB_THEME_CFG_PATH"
}

# Generate the GRUB configuration file with superuser privileges.
#
# Usage: _grub_mkconfig
_grub_mkconfig() {
    sudo grub-mkconfig -o "$GRUB_THEME_CFG_PATH"
}

# Generate the GRUB configuration file with superuser privileges if this theme
# is in use.
#
# Usage: _grub_mkconfig_smart
_grub_mkconfig_smart() {
    if _is_use_theme; then
        _status "Use the 'grub-mkconfig' tool to generate '$GRUB_THEME_CFG_PATH'"
        _grub_mkconfig
    fi
}

# Return true if the default GRUB theme uses this theme, otherwise return false.
#
# Usage: _is_use_theme_default_grub
_is_use_theme_default_grub() {
    _grep_theme_in_default_grub >/dev/null
    return $?
}

# Return true if the current GRUB theme uses this theme, otherwise return false.
#
# Usage: _is_use_theme_grub_cfg
_is_use_theme_grub_cfg() {
    _grep_theme_in_grub_cfg >/dev/null
    return $?
}

# Return true if both the default GRUB configuration file and the current GRUB
# configuration file use this theme. Otherwise return false.
#
# Usage: _is_use_theme
_is_use_theme() {
    _is_use_theme_default_grub && _is_use_theme_grub_cfg
    return $?
}

# Print each MESSAGE on a new line with the `grub-theme-vimix-very-dark-blue: `
# prefix.
#
# Usage: status [MESSAGE ...]
_status() {
    printf 'grub-theme-vimix-very-dark-blue: %s\n' "$@"
}

# Print each MESSAGE on a new line with the `grub-theme-vimix-very-dark-blue: `
# prefix to stderr.
#
# Usage: status_error [MESSAGE ...]
_status_error() {
    _status "$@" >&2
}
